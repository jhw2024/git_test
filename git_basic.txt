# git 1단계
모든 git 명령어는 
`git `으로 시작한다.

저장소 만들기
git init

깃 저장소 주인 설정
git config --local user.name "유저이름"
git config --global user.email "유저이메일"
--local은 현재 저장소에만 이 설정을 적용
--global은 이 PC의 모든 저장소에 이 설정을 기본으로 적용
 
★저장소 상태(status) 확인
git status
-> 변경사항이 있다.
- staging 단계
변경사항이 있는 파일을 새로운 버전에 추가(add)하는 작업을 staging이라고 부른다(대괄호 쓰는 거 아님)
git add [파일경로1] [파일경로2]
혹은 모든 변경사항을 추가하려면 아래 명령어를 입력하자
git add .

-> 스테이징된 파일 확인
git status

버전 확정 짓기 -> 커밋(commit)
커밋을 하기 위해서는 해당 버전에 대한 메시지를 남겨야 한다.
git commit -m "해당 버전에 대한 정보를 적은 텍스트"

-> 커밋이 완료되었는지 확인
git stauts

# 2단계
로컬에서 만들고 커밋한 저장소(repository)의 정보를 개인 원격(remote) 저장소에 올려야 한다.
연결이 선행되어야 한다.

연결하는 코드는 깃허브에서 리포지토리를 비우고 만들면 맨 아래에 있다.

git remote add [원격저장소별칭] [저장소링크.git]
git push origin main
origin이라는 저장소에 main 브랜치 정보를 업데이트-하겠다라는 명령어

연결된 게 하나라면 git push만 입력해도 된다.

============================

현재 처음으로 만들고 작성한 폴더를 A폴더라고 했을 때
다른 컴퓨터에서 A폴더에서 올린 파일 내용을 그대로 받아서
'이어서' 작업 하고 싶다.

개인 원격 저장소에 저장된 내용을 원하는 폴더에 복제
-> git clone

※ git clone은 git init을 하지 않은 빈 폴더에만 사용이 가능하다.
git clone을 하고 나면 A폴더에 있던 .git 폴더도 생긴다.
-> init, clone 둘 중 하나만 해야 한다.

● 사용법
git clone <github주소> .
-> 저장소가 올라간 github url과 함께, 마지막에 공백과 마침표를 적어준다.
마침표는 현재 폴더 안에 A폴더의 내용물을 그대로 풀어넣어달라는 의미이다.

=============================

A폴더 쪽에서 작성한 내용을
git add .
git commit -m "내용"
git push
위 명령어들로 파일을 추가하고 커밋한 뒤
푸시(원격 개인 저장소에 업로드)한 뒤
-> B폴더에서 최신 반영사항을 업데이트 받으려면 
땡겨와야 한다.
git pull

=============================

만약 A폴더와 B폴더가 동시에 같은 파일을 수정해버리면
-> 충돌이 발생한다.


==============================

원격 공용 저장소 organization을 배웠다

PR을 해야 한다.













